{"version":3,"sources":["components/posts/NewPost.js","components/posts/PostList.js","components/posts/PostView.js","components/Home.js","components/navbar/NavBar.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","button","margin","spacing","input","display","dense","marginTop","NewPostForm","props","classes","_React$useState","React","useState","title","tags","content","_React$useState2","Object","slicedToArray","values","setValues","handleChange","name","event","objectSpread","defineProperty","target","value","react_default","a","createElement","className","container","onSubmit","formSubmitHandler","TextField","id","label","textField","onChange","variant","multiline","rowsMax","helperText","SubmitButton","Button","color","type","NewPost","_this","classCallCheck","this","console","log","possibleConstructorReturn","getPrototypeOf","call","state","posts","JSON","parse","localStorage","getItem","updatePosts","callback","bind","assertThisInitialized","preventDefault","setState","document","getElementById","postData","length","split","updatedData","concat","setItem","stringify","Component","PostList","pageLayout","Fragment","CssBaseline","Grid","item","xs","style","backgroundColor","height","map","postDetail","index","key","Paper","square","react_router_dom","to","textDecoration","Divider","posts_NewPost","PostView","data","PostData","postTitle","postContent","postTag","postId","match","params","i","parseInt","join","Home","TabContainer","Typography","component","padding","children","root","flexGrow","palette","background","paper","NavBar","setValue","AppBar","position","Tabs","newValue","centered","Tab","Container","maxWidth","components_Home","posts_PostList","App","react_router","path","exact","Boolean","window","location","hostname","ReactDOM","render","src_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c598c23a.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  button: {\r\n    margin: theme.spacing(1)\r\n  },\r\n  input: {\r\n    display: \"none\"\r\n  },\r\n  dense: {\r\n    marginTop: theme.spacing(2)\r\n  }\r\n}));\r\n\r\nfunction NewPostForm(props) {\r\n  const classes = useStyles();\r\n  const [values, setValues] = React.useState({\r\n    title: \"Cat in the Hat\",\r\n    tags: \"\",\r\n    content: \"Controlled\"\r\n  });\r\n\r\n  const handleChange = name => event => {\r\n    setValues({ ...values, [name]: event.target.value });\r\n  };\r\n  return (\r\n    <form className={classes.container} onSubmit={props.formSubmitHandler}>\r\n      <TextField\r\n        id=\"title\"\r\n        label=\"Post Title\"\r\n        className={classes.textField}\r\n        value={values.name}\r\n        onChange={handleChange(\"title\")}\r\n        margin=\"normal\"\r\n        variant=\"outlined\"\r\n      />\r\n      <br />\r\n      <TextField\r\n        id=\"content\"\r\n        label=\"Post Content\"\r\n        multiline\r\n        rowsMax=\"4\"\r\n        value={values.multiline}\r\n        onChange={handleChange(\"content\")}\r\n        className={classes.textField}\r\n        margin=\"normal\"\r\n        helperText=\"Enter the Post content\"\r\n        variant=\"outlined\"\r\n      />\r\n      <br />\r\n      <TextField\r\n        id=\"tags\"\r\n        label=\"Post Tags\"\r\n        className={classes.textField}\r\n        value={values.name}\r\n        onChange={handleChange(\"tags\")}\r\n        margin=\"normal\"\r\n        variant=\"outlined\"\r\n      />\r\n      <br />\r\n      <SubmitButton />\r\n    </form>\r\n  );\r\n}\r\nfunction SubmitButton() {\r\n  const classes = useStyles();\r\n  return (\r\n    <Button\r\n      variant=\"contained\"\r\n      color=\"primary\"\r\n      type=\"submit\"\r\n      className={classes.button}\r\n    >\r\n      Submit\r\n    </Button>\r\n  );\r\n}\r\n\r\nclass NewPost extends React.Component {\r\n  constructor(props) {\r\n    console.log(\"I am constructor\");\r\n    super(props);\r\n    this.state = {\r\n      posts: JSON.parse(localStorage.getItem(\"posts\")),\r\n      updatePosts: props.callback\r\n    };\r\n    this.formSubmitHandler = this.formSubmitHandler.bind(this);\r\n  }\r\n\r\n  formSubmitHandler(event) {\r\n    event.preventDefault();\r\n    this.setState({\r\n      posts: JSON.parse(localStorage.getItem(\"posts\"))\r\n    });\r\n    let title = document.getElementById(\"title\").value;\r\n    let content = document.getElementById(\"content\").value;\r\n    let tags = document.getElementById(\"tags\").value;\r\n    let postData = {\r\n      id: this.state.posts.length + 1,\r\n      title: title,\r\n      content: content,\r\n      tags: tags.split(\", \")\r\n    };\r\n    document.getElementById(\"title\").value = \"\";\r\n    document.getElementById(\"content\").value = \"\";\r\n    document.getElementById(\"tags\").value = \"\";\r\n\r\n    let updatedData = this.state.posts.concat(postData);\r\n    localStorage.setItem(\"posts\", JSON.stringify(updatedData));\r\n    this.state.updatePosts();\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h2>Add New Post</h2>\r\n        <br />\r\n        <NewPostForm formSubmitHandler={this.formSubmitHandler} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NewPost;\r\n","import React, { Component } from \"react\";\r\nimport NewPost from \"../posts/NewPost\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../../App.css\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n// import { makeStyles } from \"@material-ui/core/styles\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\n\r\n// const useStyles = makeStyles(theme => ({\r\n//   root: {\r\n//     padding: theme.spacing(3, 2)\r\n//   }\r\n// }));\r\n// const classes = useStyles();\r\nclass PostList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      posts: JSON.parse(localStorage.getItem(\"posts\"))\r\n    };\r\n    this.callback = this.callback.bind(this);\r\n  }\r\n  callback(event) {\r\n    console.log(\"Call Back\");\r\n    this.setState({ posts: JSON.parse(localStorage.getItem(\"posts\")) });\r\n  }\r\n  render() {\r\n    const pageLayout = (\r\n      <React.Fragment>\r\n        <CssBaseline />\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={3} />\r\n          <Grid\r\n            item\r\n            xs={6}\r\n            style={{ backgroundColor: \"#cfe8fc\", height: \"50vh\" }}\r\n          >\r\n            {this.state.posts.map((postDetail, index) => {\r\n              return (\r\n                <div key={postDetail.id}>\r\n                  <Paper className={\"root\"} square={false}>\r\n                    {/* <Paper className={classes.root}> */}\r\n                    <h3>\r\n                      <Link\r\n                        to={`/Blog-Reaction/post/${postDetail.id}`}\r\n                        style={{ textDecoration: \"none\", color: \"black\" }}\r\n                      >\r\n                        {postDetail.title}\r\n                      </Link>\r\n                    </h3>\r\n                  </Paper>\r\n                  <Divider />\r\n                </div>\r\n              );\r\n            })}\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <NewPost callback={this.callback} />\r\n          </Grid>\r\n        </Grid>\r\n      </React.Fragment>\r\n    );\r\n    return <div>{pageLayout}</div>;\r\n  }\r\n}\r\n\r\nexport default PostList;\r\n","import React from \"react\";\r\n// import { Link } from \"react-router-dom\";\r\n\r\nfunction PostView(data) {\r\n  let PostData = JSON.parse(localStorage.getItem(\"posts\"));\r\n  let postTitle = null;\r\n  let postContent = null;\r\n  let postTag = null;\r\n  console.log(data);\r\n  let postId = data.match.params.id;\r\n  for (var i = 0; i < PostData.length; i++) {\r\n    if (PostData[i].id === parseInt(postId)) {\r\n      postTitle = PostData[i].title;\r\n      postContent = PostData[i].content;\r\n      postTag = PostData[i].tags.join(\", \");\r\n      break;\r\n    }\r\n  }\r\n  return (\r\n    <div>\r\n      {/* <h2>\r\n        <Link to={\"/Blog-Reaction/posts\"}>Back</Link>\r\n      </h2> */}\r\n      <h1>{postTitle}</h1>\r\n      <p>{postContent}</p>\r\n      <p>Tags: {postTag}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PostView;\r\n","import React from \"react\";\r\n// import { makeStyles } from \"@material-ui/core/styles\";\r\n// import Button from \"@material-ui/core/Button\";\r\n// import { Link } from \"react-router-dom\";\r\n\r\n// const useStyles = makeStyles(theme => ({\r\n//   button: {\r\n//     margin: theme.spacing(1)\r\n//   },\r\n//   input: {\r\n//     display: \"none\"\r\n//   }\r\n// }));\r\n\r\nfunction Home() {\r\n  //   const classes = useStyles();\r\n  return (\r\n    <div>\r\n      <h2>Welcome to First Blog in React Js</h2>\r\n      {/* <Link to={\"/Blog-Reaction/posts\"}><Button variant=\"contained\" color=\"secondary\" className={classes.button}>\r\n            See Latest Posts\r\n        </Button></Link> */}\r\n      {/* <h1>Home Page</h1>\r\n      <h1>\r\n        <Link to={\"/Blog-Reaction/posts\"}>{\"BLOG\"}</Link>\r\n      </h1> */}\r\n    </div>\r\n  );\r\n}\r\nexport default Home;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { AppBar, Tabs, Tab } from \"@material-ui/core\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Home from \"../../components/Home\";\r\nimport PostList from \"../posts/PostList\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Container from \"@material-ui/core/Container\";\r\n\r\nfunction TabContainer(props) {\r\n  return (\r\n    <Typography component=\"div\" style={{ padding: 8 * 3 }}>\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\nTabContainer.propTypes = {\r\n  children: PropTypes.node.isRequired\r\n};\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.paper\r\n  }\r\n}));\r\n\r\nexport default function NavBar() {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  function handleChange(event, newValue) {\r\n    setValue(newValue);\r\n  }\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Tabs value={value} onChange={handleChange} centered>\r\n          <Tab label=\"Home\" />\r\n          <Tab label=\"About\" />\r\n          <Tab label=\"Blog\" />\r\n        </Tabs>\r\n      </AppBar>\r\n      {value === 0 && (\r\n        <TabContainer>\r\n          <React.Fragment>\r\n            <CssBaseline />\r\n            <Container maxWidth=\"md\">\r\n              <Home />\r\n              <Typography\r\n                component=\"div\"\r\n                style={{ backgroundColor: \"#cfe8fc\", height: \"50vh\" }}\r\n              />\r\n            </Container>\r\n          </React.Fragment>\r\n        </TabContainer>\r\n      )}\r\n      {value === 1 && (\r\n        <TabContainer>\r\n          <h2>About This Blog</h2>\r\n          <React.Fragment>\r\n            <CssBaseline />\r\n            <Container maxWidth=\"md\">\r\n              <Typography\r\n                component=\"div\"\r\n                style={{ backgroundColor: \"#cfe8fc\", height: \"50vh\" }}\r\n              />\r\n            </Container>\r\n          </React.Fragment>\r\n        </TabContainer>\r\n      )}\r\n      {value === 2 && (\r\n        <TabContainer>\r\n          <PostList />\r\n        </TabContainer>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport PostList from \"./components/posts/PostList\";\nimport PostView from \"./components/posts/PostView\";\nimport \"./App.css\";\nimport PostData from \"../src/data/posts.json\";\nimport NavBar from \"./components/navbar/NavBar\";\n// import Home from \"./components/Home\";\nfunction App() {\n  localStorage.setItem(\"posts\", JSON.stringify(PostData));\n  return (\n    <Router>\n      <div className=\"App\">\n        <NavBar />\n        <Switch>\n          {/* <Route path=\"/Blog-Reaction\" exact component={Home} /> */}\n          {/* <Route path=\"/Blog-Reaction/home\" component={Home} /> */}\n          <Route path=\"/Blog-Reaction/posts\" exact component={PostList} />\n          <Route path=\"/Blog-Reaction/post/:id\" component={PostView} />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}